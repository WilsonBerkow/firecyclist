Elm.Game = Elm.Game || {};
Elm.Game.make = function (_elm) {
   "use strict";
   _elm.Game = _elm.Game || {};
   if (_elm.Game.values)
   return _elm.Game.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Game",
   $ArbitraryRounding = Elm.ArbitraryRounding.make(_elm),
   $BasicUtil = Elm.BasicUtil.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Config = Elm.Config.make(_elm),
   $Fireball = Elm.Fireball.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Platfm = Elm.Platfm.make(_elm),
   $Player = Elm.Player.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Text = Elm.Text.make(_elm),
   $Time = Elm.Time.make(_elm),
   $Touch = Elm.Touch.make(_elm),
   $Vect = Elm.Vect.make(_elm);
   var cGame_init = function () {
      var $ = {ctor: "_Tuple2"
              ,_0: $Fireball.configFireball.padded_len
              ,_1: $Fireball.configFireball.side_len},
      pad_len = $._0,
      side_len = $._1;
      var $ = {ctor: "_Tuple2"
              ,_0: $Basics.toFloat($Config.game_total_width)
              ,_1: $Basics.toFloat($Config.game_total_height)},
      gw = $._0,
      gh = $._1;
      var top_margin = $Config.game_top_margin;
      var side_margin = $Config.game_side_margin;
      return {_: {}
             ,fb_creation_seed: $Random.initialSeed(-1318314831)
             ,fireballs: _L.fromArray([])
             ,last_touch: $Maybe.Nothing
             ,plats: _L.fromArray([])
             ,player: {_: {}
                      ,pos: A2($Vect.Vect,200,75)
                      ,vel: A2($Vect.Vect,0,0)}
             ,points: 0
             ,prev_tap_pos: A2($Vect.Vect,
             0,
             0)
             ,preview_plat: $Maybe.Nothing
             ,time_playing: 0};
   }();
   var Game_State = F9(function (a,
   b,
   c,
   d,
   e,
   f,
   g,
   h,
   i) {
      return {_: {}
             ,fb_creation_seed: f
             ,fireballs: c
             ,last_touch: d
             ,plats: a
             ,player: b
             ,points: i
             ,prev_tap_pos: g
             ,preview_plat: e
             ,time_playing: h};
   });
   var game_background = A2($Graphics$Collage.filled,
   A4($Color.rgba,
   175,
   175,
   255,
   0.75),
   A2($Graphics$Collage.rect,
   $Basics.toFloat($Config.game_total_width),
   $Basics.toFloat($Config.game_total_height)));
   var cGame_render = function (game) {
      return function () {
         var btn_outline_clr = A4($Color.rgba,
         150,
         150,
         150,
         0.25);
         var btn_outline_rad = 65;
         var btn_outline = A2($Graphics$Collage.filled,
         btn_outline_clr,
         $Graphics$Collage.circle(btn_outline_rad));
         var btnMargin = 20;
         var restartBtn = $Graphics$Collage.scale(2.3)($Vect.move_f(A2($Vect.Vect,
         $Basics.toFloat($Config.game_total_width) - btnMargin,
         btnMargin))($Graphics$Collage.toForm($Text.plainText("‚ü≥"))));
         var pauseBtn = $Graphics$Collage.scale(2)($Vect.move_f(A2($Vect.Vect,
         btnMargin,
         btnMargin + 2))($Graphics$Collage.toForm($Text.centered($Text.bold(A2($Text.typeface,
         _L.fromArray(["arial"
                      ,"sans-serif"
                      ,"monospace"]),
         $Text.fromString("II")))))));
         var fireballs = A2($List.map,
         $Fireball.renderFireball,
         game.fireballs);
         var plat_preview = A2($Maybe.map,
         $Platfm.renderTouchPlatfmPreview,
         game.preview_plat);
         var plats = A2($List.map,
         $Platfm.renderPlatfm,
         game.plats);
         var forms$ = A2($Basics._op["++"],
         A2($List._op["::"],
         pauseBtn,
         A2($List._op["::"],
         restartBtn,
         plats)),
         A2($Basics._op["++"],
         _L.fromArray([$Player.renderPlayer(game.player)]),
         A2($Basics._op["++"],
         fireballs,
         _L.fromArray([A2($Vect.move_f,
                      A2($Vect.Vect,10,-5),
                      btn_outline)
                      ,A2($Vect.move_f,
                      A2($Vect.Vect,
                      $Basics.toFloat($Config.game_total_width) - 10,
                      -5),
                      btn_outline)
                      ,A2($Vect.move_f,
                      A2($Vect.Vect,
                      $Basics.toFloat($Config.game_total_width) / 2,
                      20),
                      $Graphics$Collage.toForm($Text.centered(A2($Text.color,
                      $Color.black,
                      $Text.bold(A2($Text.typeface,
                      _L.fromArray(["monospace"
                                   ,"arial"]),
                      A2($Text.height,
                      30,
                      $Text.fromString($Basics.toString($Basics.round(game.points))))))))))]))));
         var forms = function () {
            switch (plat_preview.ctor)
            {case "Just":
               return A2($List._op["::"],
                 plat_preview._0,
                 forms$);
               case "Nothing": return forms$;}
            _U.badCase($moduleName,
            "between lines 147 and 150");
         }();
         return A3($Graphics$Collage.collage,
         $Config.game_total_width,
         $Config.game_total_height,
         A2($List._op["::"],
         game_background,
         forms));
      }();
   };
   var tovect = function (_v2) {
      return function () {
         return A2($Vect.Vect,
         $Basics.toFloat(_v2.x),
         $Basics.toFloat(_v2.y));
      }();
   };
   var taps_f = A2($Signal.map,
   tovect,
   $Touch.taps);
   var cGame_inputs = A4($Signal.map3,
   F3(function (v0,v1,v2) {
      return {ctor: "_Tuple3"
             ,_0: v0
             ,_1: v1
             ,_2: v2};
   }),
   A2($Signal.map,
   $BasicUtil.mhead,
   $Touch.touches),
   taps_f,
   $Time.fps($Config.framerate));
   var Die = function (a) {
      return {ctor: "Die",_0: a};
   };
   var Restart = function (a) {
      return {ctor: "Restart"
             ,_0: a};
   };
   var Pause = function (a) {
      return {ctor: "Pause",_0: a};
   };
   var Continue = function (a) {
      return {ctor: "Continue"
             ,_0: a};
   };
   var cGame_step = function () {
      var update_and_filter = F4(function (dt,
      stepper,
      filterer,
      objs) {
         return A2($List.map,
         stepper(dt),
         A2($List.filter,filterer,objs));
      });
      var player_hitting_fb = F2(function (player,
      fb) {
         return _U.cmp(A2($Vect.distance,
         player.pos,
         fb.pos),
         $Player.configPlayer.radius + $Fireball.fb_height / 2) < 0;
      });
      var plat_alive = function (_v4) {
         return function () {
            return _U.cmp(_v4.time_left,
            30) > 0;
         }();
      };
      var point_on_screen = function (_v6) {
         return function () {
            switch (_v6.ctor)
            {case "Vect":
               return A3($BasicUtil.in_range,
                 0,
                 $Basics.toFloat($Config.game_total_width),
                 _v6._0) && A3($BasicUtil.in_range,
                 0,
                 $Basics.toFloat($Config.game_total_height),
                 _v6._1);}
            _U.badCase($moduleName,
            "on line 53, column 37 to 122");
         }();
      };
      var plat_on_screen = function (_v10) {
         return function () {
            return point_on_screen(_v10.start) || point_on_screen(_v10.end);
         }();
      };
      var fb_on_screen = function (_v12) {
         return function () {
            return point_on_screen(_v12.pos) || point_on_screen(A2($Vect.vect_rise,
            $Fireball.fb_height,
            _v12.pos));
         }();
      };
      var touch_to_platfm = function (_v14) {
         return function () {
            return {_: {}
                   ,end: A2($Vect.Vect,
                   $Basics.toFloat(_v14.x),
                   $Basics.toFloat(_v14.y))
                   ,start: A2($Vect.Vect,
                   $Basics.toFloat(_v14.x0),
                   $Basics.toFloat(_v14.y0))
                   ,time_left: 800};
         }();
      };
      var step = F2(function (_v16,
      g) {
         return function () {
            switch (_v16.ctor)
            {case "_Tuple3":
               return function () {
                    var player_on_fire = A2($BasicUtil.any,
                    player_hitting_fb(g.player),
                    g.fireballs);
                    var drawn_plat = function () {
                       switch (_v16._0.ctor)
                       {case "Just":
                          return $Maybe.Nothing;
                          case "Nothing":
                          return A2($Maybe.map,
                            touch_to_platfm,
                            g.last_touch);}
                       _U.badCase($moduleName,
                       "between lines 93 and 96");
                    }();
                    var new_plats = function () {
                       var updated_plats = A4(update_and_filter,
                       _v16._2,
                       $Platfm.stepPlatfm,
                       A3($BasicUtil.fn_map2,
                       F2(function (x,y) {
                          return x && y;
                       }),
                       plat_on_screen,
                       plat_alive),
                       g.plats);
                       return function () {
                          switch (drawn_plat.ctor)
                          {case "Just":
                             return A2($List._op["::"],
                               drawn_plat._0,
                               updated_plats);
                             case "Nothing":
                             return updated_plats;}
                          _U.badCase($moduleName,
                          "between lines 98 and 100");
                       }();
                    }();
                    var $ = function () {
                       var spacing = $Basics.round($Fireball.configFireball.padded_len);
                       var $ = A2($Random.generate,
                       A2($Random.$int,0,75),
                       g.fb_creation_seed),
                       rand_should_create = $._0,
                       seed$ = $._1;
                       var should_create_fb = _U.eq(rand_should_create,
                       1);
                       var $ = A2($Random.generate,
                       A2($Random.$int,
                       0,
                       $Config.game_total_width / 3 | 0),
                       seed$),
                       rand_fb_pos = $._0,
                       seed$$ = $._1;
                       var new_fb_pos = $Basics.toFloat(A2($ArbitraryRounding.arb_round,
                       spacing,
                       rand_fb_pos)) * 3;
                       return {ctor: "_Tuple3"
                              ,_0: should_create_fb
                              ,_1: new_fb_pos
                              ,_2: seed$$};
                    }(),
                    should_create_fb = $._0,
                    new_fb_pos = $._1,
                    new_seed = $._2;
                    var new_fireballs = function () {
                       var updated_fbs = A4(update_and_filter,
                       _v16._2,
                       $Fireball.stepFireball,
                       fb_on_screen,
                       g.fireballs);
                       return should_create_fb ? A2($List._op["::"],
                       $Fireball.makeFireball(A2($Vect.Vect,
                       new_fb_pos,
                       $Basics.toFloat($Config.game_total_height) + $Fireball.fb_height)),
                       updated_fbs) : updated_fbs;
                    }();
                    var new_game = _U.replace([["player"
                                               ,A2($Player.stepPlayer,
                                               new_plats,
                                               g.player)]
                                              ,["plats",new_plats]
                                              ,["last_touch",_v16._0]
                                              ,["fireballs",new_fireballs]
                                              ,["preview_plat"
                                               ,A2($Maybe.map,
                                               touch_to_platfm,
                                               _v16._0)]
                                              ,["fb_creation_seed",new_seed]
                                              ,["prev_tap_pos",_v16._1]
                                              ,["time_playing"
                                               ,g.time_playing + _v16._2]
                                              ,["points"
                                               ,g.points + $Time.inSeconds(_v16._2) * (1 + $Vect.vect_y(g.player.pos) / $Basics.toFloat($Config.game_total_height))]],
                    g);
                    var tap_target = _U.eq(_v16._1,
                    g.prev_tap_pos) ? $Maybe.Nothing : $Maybe.Just(_v16._1);
                    var pause_clicked = function () {
                       switch (tap_target.ctor)
                       {case "Just":
                          switch (tap_target._0.ctor)
                            {case "Vect":
                               return _U.cmp(tap_target._0._0,
                                 50) < 0 && _U.cmp(tap_target._0._1,
                                 50) < 0;}
                            break;
                          case "Nothing": return false;}
                       _U.badCase($moduleName,
                       "between lines 74 and 77");
                    }();
                    var restart_clicked = function () {
                       switch (tap_target.ctor)
                       {case "Just":
                          switch (tap_target._0.ctor)
                            {case "Vect":
                               return _U.cmp(tap_target._0._0,
                                 $Basics.toFloat($Config.game_total_width) - 50) > 0 && _U.cmp(tap_target._0._1,
                                 50) < 0;}
                            break;
                          case "Nothing": return false;}
                       _U.badCase($moduleName,
                       "between lines 78 and 81");
                    }();
                    return _U.cmp($Vect.vect_y(g.player.pos),
                    $Basics.toFloat($Config.game_total_height)) > 0 ? Die(new_game) : player_on_fire ? Die(new_game) : pause_clicked ? Pause(new_game) : restart_clicked ? Restart(_v16._1) : Continue(new_game);
                 }();}
            _U.badCase($moduleName,
            "between lines 72 and 121");
         }();
      });
      return step;
   }();
   _elm.Game.values = {_op: _op
                      ,Continue: Continue
                      ,Pause: Pause
                      ,Restart: Restart
                      ,Die: Die
                      ,tovect: tovect
                      ,taps_f: taps_f
                      ,game_background: game_background
                      ,Game_State: Game_State
                      ,cGame_inputs: cGame_inputs
                      ,cGame_step: cGame_step
                      ,cGame_render: cGame_render
                      ,cGame_init: cGame_init};
   return _elm.Game.values;
};