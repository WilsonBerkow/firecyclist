Elm.Game = Elm.Game || {};
Elm.Game.make = function (_elm) {
   "use strict";
   _elm.Game = _elm.Game || {};
   if (_elm.Game.values)
   return _elm.Game.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Game",
   $ArbitraryRounding = Elm.ArbitraryRounding.make(_elm),
   $BasicUtil = Elm.BasicUtil.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Coin = Elm.Coin.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Config = Elm.Config.make(_elm),
   $Fireball = Elm.Fireball.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $HasPosition = Elm.HasPosition.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Platfm = Elm.Platfm.make(_elm),
   $Player = Elm.Player.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Target = Elm.Target.make(_elm),
   $Text = Elm.Text.make(_elm),
   $Time = Elm.Time.make(_elm),
   $Touch = Elm.Touch.make(_elm);
   var init = function (current_time) {
      return function () {
         var $ = {ctor: "_Tuple2"
                 ,_0: $Fireball.configFireball.padded_len
                 ,_1: $Fireball.configFireball.side_len},
         pad_len = $._0,
         side_len = $._1;
         var $ = {ctor: "_Tuple2"
                 ,_0: $Basics.toFloat($Config.game_total_width)
                 ,_1: $Basics.toFloat($Config.game_total_height)},
         gw = $._0,
         gh = $._1;
         var top_margin = $Config.game_top_margin;
         var side_margin = $Config.game_side_margin;
         return {_: {}
                ,coins: _L.fromArray([])
                ,fb_creation_seed: $Random.initialSeed($Basics.round(current_time))
                ,fireballs: _L.fromArray([])
                ,just_a_simulation: false
                ,last_touch: $Maybe.Nothing
                ,plats: _L.fromArray([])
                ,player: {_: {}
                         ,arms_dir: true
                         ,pos: {_: {},x: 200,y: 75}
                         ,vel: {_: {},x: 0,y: 0}}
                ,points: 0
                ,prev_tap_pos: {_: {},x: 0,y: 0}
                ,preview_plat: $Maybe.Nothing
                ,t0_preview_plat_just_added: $Maybe.Nothing
                ,targets: _L.fromArray([])
                ,time_playing: 0};
      }();
   };
   var State = function (a) {
      return function (b) {
         return function (c) {
            return function (d) {
               return function (e) {
                  return function (f) {
                     return function (g) {
                        return function (h) {
                           return function (i) {
                              return function (j) {
                                 return function (k) {
                                    return function (l) {
                                       return function (m) {
                                          return {_: {}
                                                 ,coins: c
                                                 ,fb_creation_seed: i
                                                 ,fireballs: e
                                                 ,just_a_simulation: m
                                                 ,last_touch: f
                                                 ,plats: a
                                                 ,player: b
                                                 ,points: l
                                                 ,prev_tap_pos: j
                                                 ,preview_plat: g
                                                 ,t0_preview_plat_just_added: h
                                                 ,targets: d
                                                 ,time_playing: k};
                                       };
                                    };
                                 };
                              };
                           };
                        };
                     };
                  };
               };
            };
         };
      };
   };
   var game_background = A2($Graphics$Collage.filled,
   A4($Color.rgba,
   175,
   175,
   255,
   0.75),
   A2($Graphics$Collage.rect,
   $Basics.toFloat($Config.game_total_width),
   $Basics.toFloat($Config.game_total_height)));
   var render = function () {
      var btn_outline_clr = A4($Color.rgba,
      150,
      150,
      150,
      0.25);
      var btn_outline_rad = 65;
      var btn_outline = A2($Graphics$Collage.filled,
      btn_outline_clr,
      $Graphics$Collage.circle(btn_outline_rad));
      var btnMargin = 20;
      var restartBtn = $Graphics$Collage.scale(2.3)($HasPosition.move_f({_: {}
                                                                        ,x: $Basics.toFloat($Config.game_total_width) - btnMargin
                                                                        ,y: btnMargin})($Graphics$Collage.toForm($Text.plainText("R"))));
      var pauseBtn = $Graphics$Collage.scale(2)($HasPosition.move_f({_: {}
                                                                    ,x: btnMargin
                                                                    ,y: btnMargin + 2})($Graphics$Collage.toForm($Text.centered($Text.bold(A2($Text.typeface,
      _L.fromArray(["arial"
                   ,"sans-serif"
                   ,"monospace"]),
      $Text.fromString("II")))))));
      return function (game) {
         return function () {
            var fireballs = A2($List.map,
            $Fireball.renderFireball,
            game.fireballs);
            var plat_preview = A2($Maybe.map,
            $Platfm.renderTouchPlatfmPreview,
            game.preview_plat);
            var targets = A2($List.map,
            $Target.renderTarget,
            game.targets);
            var coins = A2($List.map,
            $Coin.renderCoin,
            game.coins);
            var plats = A2($List.map,
            $Platfm.renderPlatfm,
            game.plats);
            var forms$ = A2($Basics._op["++"],
            _L.fromArray([pauseBtn
                         ,restartBtn]),
            A2($Basics._op["++"],
            _L.fromArray([A2($HasPosition.move_f,
                         {_: {},x: 10,y: -5},
                         btn_outline)
                         ,A2($HasPosition.move_f,
                         {_: {}
                         ,x: $Basics.toFloat($Config.game_total_width) - 10
                         ,y: -5},
                         btn_outline)
                         ,A2($HasPosition.move_f,
                         {_: {}
                         ,x: $Basics.toFloat($Config.game_total_width) / 2
                         ,y: 20},
                         $Graphics$Collage.toForm($Text.centered(A2($Text.color,
                         $Color.black,
                         $Text.bold(A2($Text.typeface,
                         _L.fromArray(["monospace"
                                      ,"arial"]),
                         A2($Text.height,
                         30,
                         $Text.fromString($Basics.toString($Basics.round(game.points))))))))))]),
            A2($Basics._op["++"],
            plats,
            A2($Basics._op["++"],
            targets,
            A2($Basics._op["++"],
            coins,
            A2($Basics._op["++"],
            fireballs,
            _L.fromArray([$Player.renderPlayer(game.player)])))))));
            var forms = function () {
               switch (plat_preview.ctor)
               {case "Just":
                  return A2($List._op["::"],
                    plat_preview._0,
                    forms$);
                  case "Nothing": return forms$;}
               _U.badCase($moduleName,
               "between lines 241 and 244");
            }();
            return A3($Graphics$Collage.collage,
            $Config.game_total_width,
            $Config.game_total_height,
            A2($List._op["::"],
            game_background,
            forms));
         }();
      };
   }();
   var toPosition = function (_v2) {
      return function () {
         return {_: {}
                ,x: $Basics.toFloat(_v2.x)
                ,y: $Basics.toFloat(_v2.y)};
      }();
   };
   var Die = function (a) {
      return {ctor: "Die",_0: a};
   };
   var Restart = function (a) {
      return {ctor: "Restart"
             ,_0: a};
   };
   var Pause = function (a) {
      return {ctor: "Pause",_0: a};
   };
   var Continue = function (a) {
      return {ctor: "Continue"
             ,_0: a};
   };
   var step = function () {
      var confirm_platfm_validity = function (_v4) {
         return function () {
            return _U.eq(_v4.start,
            _v4.end) ? $Maybe.Nothing : _U.eq(_v4.start.y,
            _v4.end.y) ? $Maybe.Just(_U.replace([["start"
                                                 ,_U.replace([["y"
                                                              ,_v4.start.y - 1]],
                                                 _v4.start)]],
            _v4)) : $Maybe.Just(_v4);
         }();
      };
      var randomly_create_x = F4(function (seed,
      dt,
      likelihood,
      spacing) {
         return function () {
            var $ = A2($Random.generate,
            A2($Random.$float,
            0,
            100 / (dt / 30) / likelihood),
            seed),
            rand_should_create = $._0,
            seed$ = $._1;
            var should_create_fb = _U.cmp(rand_should_create,
            1) < 0;
            var $ = A2($Random.generate,
            A2($Random.$int,
            0,
            $Config.game_total_width / 3 | 0),
            seed$),
            rand_fb_pos = $._0,
            seed$$ = $._1;
            var new_fb_pos = should_create_fb ? $Maybe.Just($Basics.toFloat(A2($ArbitraryRounding.arb_round,
            spacing,
            rand_fb_pos)) * 3) : $Maybe.Nothing;
            return {ctor: "_Tuple2"
                   ,_0: new_fb_pos
                   ,_1: seed$$};
         }();
      });
      var update_and_filter = F3(function (stepper,
      filterer,
      objs) {
         return A2($List.map,
         stepper,
         A2($List.filter,filterer,objs));
      });
      var target_hitting_player = F2(function (pl,
      _v6) {
         return function () {
            switch (_v6.ctor)
            {case "_Tuple3":
               return _U.cmp(A2($HasPosition.distance,
                 pl.pos,
                 _v6._0),
                 $Player.player_head_radius + $Target.target_radius * (_v6._1 / $Target.target_lifespan)) < 0;}
            _U.badCase($moduleName,
            "on line 88, column 53 to 140");
         }();
      });
      var target_alive = function (_v11) {
         return function () {
            switch (_v11.ctor)
            {case "_Tuple3":
               return _U.cmp(_v11._1,0) > -1;}
            _U.badCase($moduleName,
            "on line 85, column 39 to 52");
         }();
      };
      var coin_hitting_player = F2(function (pl,
      coin) {
         return _U.cmp(A2($HasPosition.distance,
         pl.pos,
         coin),
         $Player.player_head_radius + $Coin.coin_radius) < 0 || _U.cmp(A2($HasPosition.distance,
         $Player.playerWheelCenterPos(pl),
         coin),
         $Player.player_wheel_radius + $Coin.coin_radius) < 0;
      });
      var player_hitting_fb = F2(function (player,
      fb) {
         return _U.cmp(A2($HasPosition.distance,
         player.pos,
         fb.pos),
         $Player.player_head_radius + $Fireball.fb_radius) < 0;
      });
      var plat_alive = function (_v16) {
         return function () {
            return _U.cmp(_v16.time_left,
            30) > 0;
         }();
      };
      var point_on_screen = function (_v18) {
         return function () {
            return A3($BasicUtil.in_range,
            0,
            $Basics.toFloat($Config.game_total_width),
            _v18.x) && A3($BasicUtil.in_range,
            0,
            $Basics.toFloat($Config.game_total_height),
            _v18.y);
         }();
      };
      var plat_on_screen = function (_v20) {
         return function () {
            return point_on_screen(_v20.start) || point_on_screen(_v20.end);
         }();
      };
      var plat_should_stay = A3($BasicUtil.fn_map2,
      F2(function (x,y) {
         return x && y;
      }),
      plat_on_screen,
      plat_alive);
      var fb_on_screen = function (_v22) {
         return function () {
            return point_on_screen(_v22.pos) || point_on_screen(A2($HasPosition.vect_rise,
            $Fireball.fb_height,
            _v22.pos));
         }();
      };
      var coin_on_screen = function (pos) {
         return point_on_screen(pos) || point_on_screen(A2($HasPosition.vect_rise,
         $Coin.coin_radius,
         pos));
      };
      var touch_to_platfm = function (_v24) {
         return function () {
            return {_: {}
                   ,end: {_: {}
                         ,x: $Basics.toFloat(_v24.x)
                         ,y: $Basics.toFloat(_v24.y)}
                   ,start: {_: {}
                           ,x: $Basics.toFloat(_v24.x0)
                           ,y: $Basics.toFloat(_v24.y0)}
                   ,time_left: 800};
         }();
      };
      var step = F2(function (_v26,
      g) {
         return function () {
            switch (_v26.ctor)
            {case "_Tuple3":
               return function () {
                    var points_from_coins = 5 * $Basics.toFloat($List.length(A2($List.filter,
                    coin_hitting_player(g.player),
                    g.coins)));
                    var player_on_fire = A2($BasicUtil.any,
                    player_hitting_fb(g.player),
                    g.fireballs);
                    var new_preview_plat = function () {
                       var _v31 = {ctor: "_Tuple2"
                                  ,_0: g.t0_preview_plat_just_added
                                  ,_1: _v26._0};
                       switch (_v31.ctor)
                       {case "_Tuple2":
                          switch (_v31._0.ctor)
                            {case "Just":
                               switch (_v31._1.ctor)
                                 {case "Just":
                                    return _U.eq(_v31._0._0,
                                      _v31._1._0.t0) ? $Maybe.Nothing : A2($Maybe.andThen,
                                      $Maybe.Just(touch_to_platfm(_v31._1._0)),
                                      confirm_platfm_validity);}
                                 break;
                               case "Nothing":
                               switch (_v31._1.ctor)
                                 {case "Just":
                                    return A2($Maybe.andThen,
                                      $Maybe.Just(touch_to_platfm(_v31._1._0)),
                                      confirm_platfm_validity);}
                                 break;}
                            switch (_v31._1.ctor)
                            {case "Nothing":
                               return $Maybe.Nothing;}
                            break;}
                       _U.badCase($moduleName,
                       "between lines 130 and 138");
                    }();
                    var drawn_plat = function () {
                       switch (_v26._0.ctor)
                       {case "Just":
                          return $Maybe.Nothing;
                          case "Nothing":
                          return A2($Maybe.andThen,
                            A2($BasicUtil.maybeOr,
                            new_preview_plat,
                            g.preview_plat),
                            confirm_platfm_validity);}
                       _U.badCase($moduleName,
                       "between lines 140 and 146");
                    }();
                    var should_add_preview_plat = A2($Maybe.andThen,
                    new_preview_plat,
                    function (plat) {
                       return A2($Player.intersects_plat,
                       g.player,
                       plat) ? $Maybe.Just(plat) : $Maybe.Nothing;
                    });
                    var new_plats = function () {
                       var updated_plats = A3(update_and_filter,
                       $Platfm.stepPlatfm(_v26._2),
                       plat_should_stay,
                       g.plats);
                       return function () {
                          var _v39 = {ctor: "_Tuple2"
                                     ,_0: should_add_preview_plat
                                     ,_1: drawn_plat};
                          switch (_v39.ctor)
                          {case "_Tuple2":
                             switch (_v39._1.ctor)
                               {case "Just":
                                  return A2($List._op["::"],
                                    _v39._1._0,
                                    updated_plats);}
                               switch (_v39._0.ctor)
                               {case "Just":
                                  return A2($List._op["::"],
                                    _v39._0._0,
                                    updated_plats);}
                               break;}
                          return updated_plats;
                       }();
                    }();
                    var $ = A4(randomly_create_x,
                    g.fb_creation_seed,
                    _v26._2,
                    1,
                    $Basics.round($Fireball.configFireball.padded_len)),
                    new_fb_pos = $._0,
                    seed0 = $._1;
                    var $ = A4(randomly_create_x,
                    seed0,
                    _v26._2,
                    0.4,
                    $Basics.round($Coin.coin_radius)),
                    new_coin_pos = $._0,
                    seed1 = $._1;
                    var $ = A4(randomly_create_x,
                    seed1,
                    _v26._2,
                    0.2,
                    $Basics.round($Target.target_radius)),
                    new_target_x = $._0,
                    seed2 = $._1;
                    var $ = A2($Random.generate,
                    A2($Random.$float,
                    25,
                    $Basics.toFloat($Config.game_total_height) * 1 / 3 + 25),
                    seed2),
                    random_target_y = $._0,
                    seed3 = $._1;
                    var $ = A2($Random.generate,
                    A2($Random.$int,0,10),
                    seed3),
                    change_arms_dir = $._0,
                    new_seed = $._1;
                    var new_targets = function () {
                       var updated_targets = A3(update_and_filter,
                       $Target.stepTarget(_v26._2),
                       A3($BasicUtil.fn_map2,
                       F2(function (x,y) {
                          return x && y;
                       }),
                       target_alive,
                       function ($) {
                          return $Basics.not(target_hitting_player(g.player)($));
                       }),
                       g.targets);
                       return function () {
                          switch (new_target_x.ctor)
                          {case "Just":
                             return A2($List._op["::"],
                               {ctor: "_Tuple3"
                               ,_0: {_: {}
                                    ,x: new_target_x._0
                                    ,y: random_target_y}
                               ,_1: $Target.target_lifespan
                               ,_2: $Maybe.Nothing},
                               updated_targets);
                             case "Nothing":
                             return updated_targets;}
                          _U.badCase($moduleName,
                          "between lines 182 and 186");
                       }();
                    }();
                    var new_coins = function () {
                       var updated_coins = A3(update_and_filter,
                       $Coin.stepCoin(_v26._2),
                       A3($BasicUtil.fn_map2,
                       F2(function (x,y) {
                          return x && y;
                       }),
                       coin_on_screen,
                       function ($) {
                          return $Basics.not(coin_hitting_player(g.player)($));
                       }),
                       g.coins);
                       return function () {
                          switch (new_coin_pos.ctor)
                          {case "Just":
                             return A2($List._op["::"],
                               {_: {}
                               ,x: new_coin_pos._0
                               ,y: $Basics.toFloat($Config.game_total_height) + $Coin.coin_radius},
                               updated_coins);
                             case "Nothing":
                             return updated_coins;}
                          _U.badCase($moduleName,
                          "between lines 175 and 179");
                       }();
                    }();
                    var new_fireballs = function () {
                       var updated_fbs = A3(update_and_filter,
                       $Fireball.stepFireball(_v26._2),
                       fb_on_screen,
                       g.fireballs);
                       return function () {
                          switch (new_fb_pos.ctor)
                          {case "Just":
                             return A2($List._op["::"],
                               $Fireball.makeFireball({_: {}
                                                      ,x: new_fb_pos._0
                                                      ,y: $Basics.toFloat($Config.game_total_height) + $Fireball.fb_height}),
                               updated_fbs);
                             case "Nothing":
                             return updated_fbs;}
                          _U.badCase($moduleName,
                          "between lines 165 and 168");
                       }();
                    }();
                    var new_game = {_: {}
                                   ,coins: new_coins
                                   ,fb_creation_seed: new_seed
                                   ,fireballs: new_fireballs
                                   ,just_a_simulation: false
                                   ,last_touch: _v26._0
                                   ,plats: new_plats
                                   ,player: A2($Player.stepPlayer,
                                   {ctor: "_Tuple3"
                                   ,_0: new_plats
                                   ,_1: _v26._2
                                   ,_2: _U.eq(change_arms_dir,0)},
                                   g.player)
                                   ,points: g.points + 2 * $Time.inSeconds(_v26._2) * (1 + g.player.pos.y / $Basics.toFloat($Config.game_total_height)) + points_from_coins
                                   ,prev_tap_pos: _v26._1
                                   ,preview_plat: $BasicUtil.isJust(should_add_preview_plat) ? $Maybe.Nothing : new_preview_plat
                                   ,t0_preview_plat_just_added: $BasicUtil.isJust(should_add_preview_plat) ? A2($Maybe.map,
                                   function (_) {
                                      return _.t0;
                                   },
                                   _v26._0) : g.t0_preview_plat_just_added
                                   ,targets: new_targets
                                   ,time_playing: g.time_playing + _v26._2};
                    var tap_target = _U.eq(_v26._1,
                    g.prev_tap_pos) ? $Maybe.Nothing : $Maybe.Just(_v26._1);
                    var pause_clicked = function () {
                       switch (tap_target.ctor)
                       {case "Just":
                          return _U.cmp(tap_target._0.x,
                            50) < 0 && _U.cmp(tap_target._0.y,
                            50) < 0;
                          case "Nothing": return false;}
                       _U.badCase($moduleName,
                       "between lines 115 and 118");
                    }();
                    var restart_clicked = function () {
                       switch (tap_target.ctor)
                       {case "Just":
                          return _U.cmp(tap_target._0.x,
                            $Basics.toFloat($Config.game_total_width) - 50) > 0 && _U.cmp(tap_target._0.y,
                            50) < 0;
                          case "Nothing": return false;}
                       _U.badCase($moduleName,
                       "between lines 119 and 122");
                    }();
                    return _U.cmp(g.player.pos.y,
                    $Basics.toFloat($Config.game_total_height)) > 0 ? Die(new_game) : player_on_fire ? Die(new_game) : pause_clicked ? Pause(new_game) : restart_clicked ? Restart(_v26._1) : Continue(new_game);
                 }();}
            _U.badCase($moduleName,
            "between lines 113 and 209");
         }();
      });
      return step;
   }();
   _elm.Game.values = {_op: _op
                      ,game_background: game_background
                      ,init: init
                      ,render: render
                      ,step: step
                      ,State: State
                      ,Continue: Continue
                      ,Pause: Pause
                      ,Restart: Restart
                      ,Die: Die};
   return _elm.Game.values;
};